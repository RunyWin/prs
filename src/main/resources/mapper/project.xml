<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wymessi.dao.ProjectDao">

	<resultMap type="project" id="projectrMap">
		<id column="id" property="id" />
		<result column="project_name" property="projectName" />
		<result column="description" property="description" />
		<result column="status" property="status" />
		<result column="file_save_path" property="fileSavePath" />
		<result column="create_time" property="createTime" />
		<result column="last_update_time" property="lastUpdateTime" />
		<result column="create_user_id" property="createUserId" />
		<association property="user" javaType="sysUser" column="create_user_id" select="getCreateUser"/>
			
	</resultMap>
	
	<sql id="insql">
	     <foreach collection="param.list" item="item" separator="," open="(" close=")">
	         #{item}
	     </foreach>
    </sql>
	
	<insert id="insert" parameterType="project">
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO project(id,project_name,description,status,file_save_path,create_time,last_update_time,create_user_id)
		VALUES(#{id},#{projectName},#{description},#{status},#{fileSavePath},#{createTime},#{lastUpdateTime},#{createUserId})
	</insert>
	
	<select id="listProject" resultMap="projectrMap">
		SELECT * FROM project 
		<where>
			<if test="projectName != null">
	            and project_name LIKE CONCAT('%',#{projectName},'%')
	        </if>
	        <if test="status != null">
	            and status = #{status}
	        </if>
	        <if test="createUserIds != null">
	            and create_user_id in 
				<foreach collection="createUserIds" item="item" separator="," open="(" close=")">
			        #{item}
			    </foreach>
	        </if>
	        <if test="startTime != null">
	            and create_time &gt; #{startTime} 
	        </if>
	        <if test="endTime != null">
	            and create_time &lt; #{endTime}
	        </if>
        </where>
        LIMIT #{offset},#{limit}
	</select>
	<select id="getCreateUser" resultType="sysUser" parameterType="long">
		SELECT * FROM sys_user WHERE id = #{create_user_id}
	</select>
	<select id="getTotalCount" resultType="int">
		SELECT count(*) FROM project 
		<where>
			<if test="projectName != null">
	            and project_name LIKE CONCAT('%',#{projectName},'%')
	        </if>
	        <if test="status != null">
	            and status = #{status}
	        </if>
	        <if test="createUserIds != null">
	            and create_user_id in 
				<foreach collection="createUserIds" item="item" separator="," open="(" close=")">
			        #{item}
			    </foreach>
	        </if>
	        <if test="startTime != null">
	            and create_time &gt; #{startTime} 
	        </if>
	        <if test="endTime != null">
	            and create_time &lt; #{endTime}
	        </if>
        </where>
	</select>
	<select id="getProjectById" resultMap="projectrMap" parameterType="long">
		SELECT * FROM project WHERE id = #{id}
	</select>
	<update id="update" parameterType="project">
		UPDATE project
		<set>
			<if test="projectName != null">
	            project_name = #{projectName},
	        </if>
	        <if test="description != null">
	            description = #{description},
	        </if>
	        <if test="status != null">
	            status = #{status},
	        </if>
	        <if test="fileSavePath != null">
	            file_save_path = #{fileSavePath},
	        </if>
	        <if test="status != null">
	            status = #{status},
	        </if>
	        <if test="createTime != null">
	            create_time = #{createTime},
	        </if>
	        <if test="lastUpdateTime != null">
	            last_update_time = #{lastUpdateTime},
	        </if>
	        <if test="groupId != null">
	            group_id = #{groupId},
	        </if>
		</set>
		WHERE id  = #{id}
	</update>
	<delete id="deleteById" parameterType="long">
		DELETE FROM project WHERE id = #{id}
	</delete>
</mapper>